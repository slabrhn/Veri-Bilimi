DATA SCIENCE
regression = If our data can change in time. Also, if it is numerical data, we should use regression. For example, if our model want to predict salary of basktball player, we should use regression.

classification = if our model want to predict if it is cat or dog, we should use classification. Computer give us always numerical output with binary numbers but we can define this numbers with objects.

IMPORTANT === We can not know which model is more suitable for our situation. In other words, there is no way to say that this is more suitable way. Therefore, we should try different models and find more suitable model for our tasks.

continuous data == his height is 1.83 m this can be continuous data but in real life there is no continuous data because there is always an error in real life.

discrete data == 1,2,3,4 human, cow this can be discrete data.

there are 2 type of numeric data: interval and ratio

There is no point that we can refer to in interval data types, so we cannot say half of something is 2 times 5 times. no absolute zero (celcius)

In the ratio data type, 0 kelvin can be a reference point, so it can be called 2 times half of something.

categorical data -- like red, blue. it is not numeric.

binary, multiclass

binary -- this is used when we separet it is exisist or not.

multi class --- If more than 2 this is used

ordinal - this is used if sorting exists. 1st car like 5th car

cardinal -- if we say there are 4.5 cars here, this is used.

nominal -- like a car that says 99 if it describes something.

To produce outputs close to the label from the given inputs. This is our aim.

The capped y shows us the guess.

We want the error between the actual output and the estimate to be minimal.

In train we teach the model and in real life if the model gets big error when it encounters data it has never seen before

While there are 0 errors in the places we teach, if this is the case, it didn't learn, model just memorized the places of the function. This is called overfeeding.

We can train with one part of the train and use the other part as data it has never seen.

We can train in the train, iterate in the validation, reduce the error and perform the final test.

In validation and testing, we should put data that is more like real-life data.

Prediction -- you are trying to predict how close the model can output to the labeled data.
